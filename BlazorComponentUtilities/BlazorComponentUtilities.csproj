<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Description>A clean code approach to conditional CSS Classes in Blazor Components (Razor Components). When building complex components for ASP.NET Blazor there are often CSS classes generated by multiple factors. Styles can often be added by system &amp; component state, public parameters, and static base CSS classes. Combining many CSS classes together doesn't scale well, and when components get large it can be tough to reason about. The CSS builder pattern fixes this problem by offering a easy to repeat, easy to read pattern to use across components in a project.</Description>
    <Summary>A clean code approach to conditional CSS Classes in Blazor Components (Razor Components).</Summary>
    <PackageProjectUrl>https://github.com/EdCharbeneau/CssBuilder</PackageProjectUrl>
    <PackageTags>Blazor</PackageTags>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <RepositoryUrl>https://github.com/EdCharbeneau/CssBuilder</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <Copyright>Ed Charbeneau</Copyright>
    <PackageIconUrl></PackageIconUrl>
    <Authors>Ed Charbeneau</Authors>
    <Company>BlazorPro</Company>
    <Product>BlazorComponentUtilities CssBuilder</Product>
    <PackageReleaseNotes>
		2.0.0 Updated to netcoreapp3.1, this is the lowest supported version of .NET for Blazor.
		1.8.0
		Fixed null ref error when using AddClassFromAttributes and passing a null attribute value.
		1.7.1
		Fixed trivial performance issue with redundant assignment when building strings
		1.7.0
		Added SetPrefix method to reduce reptititive class prefixing
		1.6.0
		Added Func&lt;string&gt; value overload for ValueBuilder
1.5.0
      Added Func&lt;string&gt; value overload for StyleBuilder
      Minor performance improvements for .Add*Attributes
1.4.0
      Added ValueBuilder for complex styles
       Updated /// docs 
1.3.0 
      Added utlitiy mehtod for Attribute Splatting.
      Added utility method for returning null for empty strings. This is useful for splatting scenarios.
      Added utility method for starting off new builders.
</PackageReleaseNotes>
    <Version>1.8.0</Version>
    <PackageIcon>blazor-glove-256.jpg</PackageIcon>
    <AssemblyVersion>1.8.0.0</AssemblyVersion>
    <FileVersion>1.8.0.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <None Include="blazor-glove-256.jpg">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
